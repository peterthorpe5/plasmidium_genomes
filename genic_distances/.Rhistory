library(dplyr)
library(ggplot2)
library(png)
library(gridExtra)
library(ggplot2)
setwd("C:/Users/pjt6/Documents/plasmidium/genic_distances/")
my_data <- read.table("all_geneic_distances", header=TRUE, sep="\t")
my_data
levels(my_data$group)
my_data$group <- ordered(my_data$group,
levels = c("busco", "KIR", "sicavarI", "sicavarII", "Other"))
my_data <- read.table("all_geneic_distances", header=TRUE, sep="\t")
setwd("C:/Users/pjt6/Documents/plasmidium_genomes/genic_distances/")
my_data <- read.table("all_geneic_distances", header=TRUE, sep="\t")
my_data <- read.table("all_geneic_distances", header=TRUE, sep="\t")
my_data
levels(my_data$group)
my_data$group <- ordered(my_data$group,
levels = c("busco", "KIR", "sicavarI", "sicavarII", "Other"))
group_by(my_data, group) %>%
summarise(
count = n(),
mean = mean(dnds, na.rm = TRUE),
sd = sd(dnds, na.rm = TRUE),
median = median(dnds, na.rm = TRUE),
IQR = IQR(dnds, na.rm = TRUE)
)
group_by(my_data, group) %>%
summarise(
count = n(),
mean = mean(fiveprime, na.rm = TRUE),
sd = sd(fiveprime, na.rm = TRUE),
median = median(fiveprime, na.rm = TRUE),
IQR = IQR(fiveprime, na.rm = TRUE)
)
group_by(my_data, group) %>%
summarise(
count = n(),
mean = mean(threeprime, na.rm = TRUE),
sd = sd(threeprime, na.rm = TRUE),
median = median(threeprime, na.rm = TRUE),
IQR = IQR(threeprime, na.rm = TRUE)
)
ggplot(my_data, aes(x = group, y = threeprime)) +
geom_boxplot(fill = "grey92") +
## use either geom_point() or geom_jitter()
geom_point(
## draw bigger points
size = 2,
## add some transparency
alpha = .3,
## add some jittering
position = position_jitter(
## control randomness and range of jitter
seed = 1, width = .2
)
)
ggplot(my_data, aes(x = group, y = fiveprime)) +
geom_boxplot(fill = "grey92") +
## use either geom_point() or geom_jitter()
geom_point(
## draw bigger points
size = 2,
## add some transparency
alpha = .3,
## add some jittering
position = position_jitter(
## control randomness and range of jitter
seed = 1, width = .2
)
)
kruskal.test(threeprime ~ group, data = my_data)
pairwise.wilcox.test(my_data$threeprime, my_data$group, p.adj="bonferroni", exact=F)
pairwise.wilcox.test(my_data$fiveprime, my_data$group, p.adj="bonferroni", exact=F)
kruskal.test(fiveprime ~ group, data = my_data)
pairwise.wilcox.test(my_data$fiveprime, my_data$group, p.adj="bonferroni", exact=F)
